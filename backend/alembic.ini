# A generic, single database configuration for Alembic migrations.

[alembic]
# Path to migration scripts
script_location = src/db/migrations

# Template used to generate migration files
file_template = %%(year)d%%(month).2d%%(day).2d_%%(hour).2d%%(minute).2d_%%(rev)s_%%(slug)s

# Prepend sys.path with this value if set
prepend_sys_path = .

# Timezone for migration timestamps
# timezone =

# Max length of characters to apply to the "slug" field
# truncate_slug_length = 40

# Set to 'true' to run the environment during the 'revision' command
# revision_environment = false

# Set to 'true' to allow .pyc and .pyo files without a source .py file
# sourceless = false

# Version location specification
# This must be a list of version location specifications
# version_locations = %(here)s/bar:%(here)s/bat:src/db/migrations/versions

# Version path separator
# Use a semicolon for Windows
# version_path_separator = :
# version_path_separator = ;

# The output encoding used when revision files are written
# output_encoding = utf-8

[post_write_hooks]
# Post-write hooks configuration
# format using "black" - use the console_scripts runner
# hooks = black
# black.type = console_scripts
# black.entrypoint = black
# black.options = -l 79 REVISION_SCRIPT_FILENAME

# Logging configuration
[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console
qualname =

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S
